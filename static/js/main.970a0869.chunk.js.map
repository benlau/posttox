{"version":3,"sources":["components/WordCounter.js","components/SNSTableRow.js","context/MainContext.js","components/FacebookRowButtons.js","components/TwitterRowButtons.js","components/ParlerRowButtons.js","components/PlurkRowButtons.js","components/MastodonDialog.js","components/MastodonRowButtons.js","components/SNSTable.js","components/Base.js","App.js","reportWebVitals.js","index.js"],"names":["splitter","GraphemeSplitter","WordCounter","message","count","countGraphemes","Typography","display","variant","SNSTableRow","title","openButton","postButton","TableRow","TableCell","align","uuid","require","Context","createContext","sessionId","sessionStorage","generate","openUrl","url","target","window","open","MainContextProvider","children","useState","localStorage","mastodonInstance","setMastodonInstance","setMessage","value","instance","Provider","Consumer","MainContext","FacebookRowButtons","React","useContext","Button","onClick","TwitterRowButtons","disabled","length","text","encodeURIComponent","ParlerRowButtons","PlurkRowButtons","MastodonDialog","onClose","onConfirm","setInstance","Dialog","DialogTitle","DialogContent","TextField","autoFocus","margin","id","label","type","defaultValue","onChange","event","fullWidth","DialogActions","color","MastodonRowButtons","encodedMessage","mastodonDialogOpen","setMastodonDialogOpen","lastAction","setLastAction","closeMastodonDialog","openMastodon","OpenButton","Container","style","width","maxWidth","OpenOnlyButtons","GabButtons","MeWeButtons","SNSTable","TableContainer","component","Table","TableBody","useStyles","makeStyles","theme","paper","padding","full","height","content","backgroundColor","palette","background","default","page","appBar","position","textField","marginBottom","spacing","Content","classes","Box","justifyContent","className","flexGrow","clone","Paper","Base","flexDirection","alignItems","gutterBottom","multiline","rows","IconButton","aria-label","tmp","document","createElement","body","appendChild","select","execCommand","removeChild","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.970a0869.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport GraphemeSplitter from 'grapheme-splitter';\n\nconst splitter = new GraphemeSplitter();\n\n\nfunction WordCounter ({message}) {\n  const count = splitter.countGraphemes(message);\n\n  return (\n    <Typography display=\"inline\" variant=\"body1\">{count}</Typography>\n  )\n}\n\nexport default WordCounter;\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction SNSTableRow({title, openButton, postButton}) {\n  return (\n    <TableRow>\n      <TableCell align=\"left\">\n        {title}\n      </TableCell>\n      <TableCell align=\"right\">\n        {openButton}\n      </TableCell>\n      <TableCell align=\"right\">\n        {postButton}\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default SNSTableRow;\n","import React, { useState, createContext } from \"react\";\nconst uuid = require('short-uuid');\n\nconst Context = createContext();\nconst defaultMastodon = 'https://g0v.social'\nconst sessionId = sessionStorage.sessionId ?? uuid.generate();\nsessionStorage.sessionId = sessionId;\n\nfunction openUrl(url) {\n  const target = 'posttox_' + sessionId;\n  window.open(url, target);\n}\n\nexport function MainContextProvider({children}) {\n  const [mastodonInstance, setMastodonInstance] = useState(localStorage.mastodonInstance ?? defaultMastodon);\n  const [message, setMessage] = useState(localStorage.message ?? '');\n\n  const setMastodonInstanceWrapper = (instance) => {\n    localStorage.mastodonInstance = instance;\n    setMastodonInstance(instance);\n  }\n\n  const setMessageWrapper = (message) => {\n    localStorage.message = message;\n    setMessage(message);\n  }\n\n  const value = {\n    mastodonInstance,\n    setMastodonInstance: setMastodonInstanceWrapper,\n    message,\n    setMessage: setMessageWrapper,\n    openUrl\n  }\n\n  return (\n    <Context.Provider value={value}>\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport const MainContextConsumer = Context.Consumer;\nexport const MainContext = Context;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport { MainContext } from '~/context/MainContext';\n\nfunction FacebookRowButtons() {\n  const {\n    openUrl,\n  } = React.useContext(MainContext);\n\n  const openFacebook = () => {\n    openUrl('https://facebook.com');\n  }\n\n  return (\n    <SNSTableRow title=\"Facebook\"\n      openButton={\n      (<Button onClick={openFacebook}>\n        Open\n      </Button>)}\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default FacebookRowButtons;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport { MainContext } from '~/context/MainContext';\n\nfunction TwitterRowButtons({message = ''}) {\n\n  const disabled = message.length === 0;\n\n  const {\n    openUrl,\n  } = React.useContext(MainContext);\n\n  const open = () => {\n    openUrl('https://twitter.com');\n  }\n\n  const post = () => {\n    const text = encodeURIComponent(message);\n    const url = `https://twitter.com/intent/tweet?text=${text}`\n    openUrl(url);\n  }\n\n  return (\n    <SNSTableRow title=\"Twitter\"\n      openButton={\n      (<Button onClick={open}>\n        Open\n      </Button>)}\n\n      postButton={\n        (<Button onClick={post} disabled={disabled}>\n          Post\n        </Button>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default TwitterRowButtons;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport { MainContext } from '~/context/MainContext';\n\nfunction ParlerRowButtons({message = ''}) {\n\n  const disabled = message.length === 0;\n\n  const {\n    openUrl,\n  } = React.useContext(MainContext);\n\n  const open = () => {\n    openUrl('https://parler.com/');\n  }\n\n  const post = () => {\n    const text = encodeURIComponent(message);\n    const url = `https://parler.com/new-post?message=${text}`\n\n    openUrl(url);\n  }\n\n  return (\n    <SNSTableRow title=\"Parler\"\n      openButton={\n      (<Button onClick={open}>\n        Open\n      </Button>)}\n\n      postButton={\n        (<Button onClick={post} disabled={disabled}>\n          Post\n        </Button>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default ParlerRowButtons;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport { MainContext } from '~/context/MainContext';\n\nfunction PlurkRowButtons({message = ''}) {\n\n  const disabled = message.length === 0;\n\n  const {\n    openUrl,\n  } = React.useContext(MainContext);\n\n  const open = () => {\n    openUrl('https://plurk.com/');\n  }\n\n  const post = () => {\n    const text = encodeURIComponent(message);\n    const url = `http://plurk.com/?qualifier=shares&status=${text}`\n\n    openUrl(url);\n  }\n\n  return (\n    <SNSTableRow title=\"Plurk\"\n      openButton={\n      (<Button onClick={open}>\n        Open\n      </Button>)}\n\n      postButton={\n        (<Button onClick={post} disabled={disabled}>\n          Post\n        </Button>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default PlurkRowButtons;\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst MastodonDialog = ({open, onClose, onConfirm, mastodonInstance}) => {\n\n  const [instance, setInstance] = useState(mastodonInstance);\n\n  const confirm = () => {\n    onConfirm(instance);\n    onClose();\n  }\n\n  const handleChange = (event) => {\n    setInstance(event.target.value);\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Mastodon Instance Address</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Address\"\n          type=\"email\"\n          defaultValue={mastodonInstance}\n          onChange={handleChange}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={confirm} color=\"primary\">\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MastodonDialog;\n","import React, {useState, useContext} from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport MastodonDialog from './MastodonDialog';\nimport { MainContext } from '~/context/MainContext';\nconst mastodonEncodedLengthLimit= 700;\n\nfunction MastodonRowButtons({message = ''}) {\n\n  const encodedMessage = encodeURIComponent(message);\n  const disabled = message.length === 0 || encodedMessage.length > mastodonEncodedLengthLimit;\n  const [mastodonDialogOpen, setMastodonDialogOpen] = useState(false);\n  const [lastAction, setLastAction] = useState('');\n\n  const {\n    openUrl,\n    mastodonInstance,\n    setMastodonInstance\n  } = useContext(MainContext);\n\n  const open = () => {\n    setLastAction('open');\n    setMastodonDialogOpen(true);\n  }\n\n  const post = () => {\n    setLastAction('post');\n    setMastodonDialogOpen(true);\n  }\n\n  const closeMastodonDialog = () => {\n    setMastodonDialogOpen(false);\n  }\n\n  const openMastodon = (instance) => {\n    setMastodonInstance(instance);\n    localStorage.mastodonInstance = instance;\n    if (lastAction === 'post') {\n      const text = encodeURIComponent(message);\n      const url = `${instance}/share?text=${text}`\n      openUrl(url);\n    } else {\n      openUrl(instance);\n    }\n  }\n\n  const OpenButton = () => {\n    return (\n      <div>\n        <Button onClick={open}>\n          Open\n        </Button>\n        <MastodonDialog\n          open={mastodonDialogOpen}\n          onClose={closeMastodonDialog}\n          onConfirm={openMastodon}\n          mastodonInstance={mastodonInstance}\n          >\n        </MastodonDialog>\n      </div>\n    )\n  }\n\n  return (\n    <SNSTableRow title=\"Mastodon\"\n      openButton={(<OpenButton/>)}\n\n      postButton={\n        (<Button onClick={post} disabled={disabled}>\n          Post\n        </Button>)\n      }\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default MastodonRowButtons;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport FacebookRowButtons from './FacebookRowButtons';\nimport TwitterRowButtons from './TwitterRowButtons';\nimport ParlerRowButtons from './ParlerRowButtons';\nimport PlurkRowButtons from './PlurkRowButtons';\nimport MastodonRowButtons from './MastodonRowButtons';\nimport SNSTableRow from './SNSTableRow.js';\nimport Button from '@material-ui/core/Button';\nimport { MainContext } from '~/context/MainContext';\n\nconst Container = ({children}) => {\n  return (\n    <div style={{width: '100%', maxWidth: '640px'}}>\n      {children}\n    </div>\n  )\n}\n\nconst OpenOnlyButtons = ({title, url}) => {\n  const {\n    openUrl,\n  } = React.useContext(MainContext);\n\n  const open = () => {\n    openUrl(url);\n  }\n\n  return (\n    <SNSTableRow title={title}\n      openButton={\n      (<Button onClick={open}>\n        Open\n      </Button>)}\n\n    >\n    </SNSTableRow>\n  )\n}\n\nconst GabButtons = () => {\n  return (\n    <OpenOnlyButtons title=\"gab\" url=\"https://gab.com\"></OpenOnlyButtons>\n  )\n}\n\nconst MeWeButtons = () => {\n  return (\n    <OpenOnlyButtons title=\"MeWe\" url=\"https://mewe.com/myworld\"></OpenOnlyButtons>\n  )\n}\n\nfunction SNSTable() {\n  const {\n    message\n  } = React.useContext(MainContext);\n\n  return (\n    <TableContainer component={Container}>\n      <Table>\n        <TableBody>\n          <MastodonRowButtons message={message}/>\n          <MeWeButtons/>\n          <ParlerRowButtons message={message}/>\n          <PlurkRowButtons message={message}/>\n          <GabButtons/>\n          <TwitterRowButtons message={message}/>\n          <FacebookRowButtons/>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default SNSTable;\n","import React, { useContext } from 'react';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport WordCounter from '~/components/WordCounter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport SNSTable from '~/components/SNSTable';\nimport { MainContext } from '~/context/MainContext';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '20px',\n    margin: '0px',\n    maxWidth: '640px',\n  },\n  full: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n  },\n  page: {\n    width: '100vw',\n    height: '100vh'\n  },\n  appBar: {\n    position: 'relative',\n    margin: 0,\n    padding: 0,\n  },\n  textField: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst Content = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.content}>\n      <Box flexGrow={1} clone>\n          <Paper className={classes.paper}>\n            {children}\n          </Paper>\n        </Box>\n    </Box>\n  )\n}\n\nfunction Base() {\n  const classes = useStyles();\n\n  const {\n    message,\n    setMessage\n  } = useContext(MainContext);\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const copy = () => {\n    const tmp = document.createElement(\"textarea\");\n    tmp.style = \"position: absolute; left: -1000px; top: -1000px\";\n    tmp.value = message;\n    document.body.appendChild(tmp);\n    tmp.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tmp);\n  }\n\n  return (\n    <Content>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.full}>\n\n        <Box display='flex'  alignItems=\"center\" >\n          <Typography gutterBottom display=\"inline\" variant=\"h5\">\n            PostToX\n          </Typography>\n        </Box>\n\n        <Typography gutterBottom variant=\"subtitle1\">Write something and post to X SNS platforms</Typography>\n        <Box clone>\n          <TextField\n            label=\"Message\"\n            multiline\n            variant=\"filled\"\n            rows={10}\n            onChange={handleChange}\n            defaultValue={message}\n            className={classes.textField}\n          />\n        </Box>\n        <Box display=\"flex\" alignItems=\"flex-start\">\n          <IconButton aria-label=\"Copy\" onClick={copy}>\n            <FileCopyIcon/>\n          </IconButton>\n\n          <Box flexGrow={1}></Box>\n          <WordCounter message={message}></WordCounter>\n        </Box>\n\n        <SNSTable>\n        </SNSTable>\n      </Box>\n    </Content>\n  );\n}\n\nexport default Base;\n","import React from 'react';\nimport Base from '~/components/Base';\nimport { MainContextProvider } from '~/context/MainContext';\n\nfunction App() {\n  return (\n    <MainContextProvider>\n      <Base></Base>\n    </MainContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}