{"version":3,"sources":["components/WordCounter.js","components/SNSTableRow.js","context/MainContext.js","components/LinkElement.js","components/TwitterRowButtons.js","components/ParlerRowButtons.js","components/PlurkRowButtons.js","components/MastodonRowButtons.js","components/SNSTable.js","components/Base.js","App.js","reportWebVitals.js","index.js"],"names":["splitter","GraphemeSplitter","WordCounter","message","count","countGraphemes","Typography","display","variant","SNSTableRow","title","openButton","postButton","TableRow","TableCell","align","Context","createContext","openUrl","url","window","open","MainContextProvider","children","useState","localStorage","mastodonInstance","setMastodonInstance","setMessage","copiedSnackBarOpen","setCopiedSnackBarOpen","value","instance","copyToClipboard","tmp","document","createElement","style","body","appendChild","select","execCommand","removeChild","Provider","Consumer","MainContext","useStyles","makeStyles","theme","disabled","pointerEvents","color","palette","action","LinkElement","href","onClick","classess","className","Link","target","underline","rel","TwitterRowButtons","React","useContext","length","text","encodeURIComponent","postUrl","ParlerRowButtons","PlurkRowButtons","configBar","borderBottom","MastodonRowButtons","configBarOpen","setConfigBarOpen","encodedMessage","postDisabled","openDisabled","Fragment","IconButton","aria-label","size","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","alignItems","clone","flexGrow","TextField","autoFocus","margin","fullWidth","label","onChange","event","Button","marginLeft","pick","examples","Math","floor","random","picked","Container","width","maxWidth","OpenOnlyButtons","GabButtons","MeWeButtons","FacebookButtons","SNSTable","TableContainer","component","Table","TableBody","paper","padding","full","height","content","backgroundColor","background","default","page","appBar","position","textField","marginBottom","spacing","link","textDecoration","Content","classes","justifyContent","Paper","Base","flexDirection","gutterBottom","multiline","rows","defaultValue","Tooltip","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f876030.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport GraphemeSplitter from 'grapheme-splitter';\n\nconst splitter = new GraphemeSplitter();\n\n\nfunction WordCounter ({message}) {\n  const count = splitter.countGraphemes(message);\n\n  return (\n    <Typography display=\"inline\" variant=\"body1\">{count}</Typography>\n  )\n}\n\nexport default WordCounter;\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction SNSTableRow({title, openButton, postButton}) {\n  return (\n    <TableRow>\n      <TableCell align=\"left\">\n        {title}\n      </TableCell>\n      <TableCell align=\"right\">\n        {openButton}\n      </TableCell>\n      <TableCell align=\"right\">\n        {postButton}\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default SNSTableRow;\n","import React, { useState, createContext } from \"react\";\nconst Context = createContext();\nconst defaultMastodon = 'https://g0v.social';\n\nfunction openUrl(url) {\n  window.open(url, 'posttox_target');\n}\n\n\nexport function MainContextProvider({children}) {\n  const [mastodonInstance, setMastodonInstance] = useState(localStorage.mastodonInstance ?? defaultMastodon);\n  const [message, setMessage] = useState(localStorage.message ?? '');\n  const [copiedSnackBarOpen, setCopiedSnackBarOpen] = useState(false);\n\n  const setMastodonInstanceWrapper = (instance) => {\n    localStorage.mastodonInstance = instance;\n    setMastodonInstance(instance);\n  }\n\n  const setMessageWrapper = (message) => {\n    localStorage.message = message;\n    setMessage(message);\n  }\n\n  const copyToClipboard = () => {\n    const tmp = document.createElement(\"textarea\");\n    tmp.style = \"position: absolute; left: -10000px; top: -10000px\";\n    tmp.value = message;\n    document.body.appendChild(tmp);\n    tmp.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tmp);\n    setCopiedSnackBarOpen(true);\n  }\n\n  const value = {\n    mastodonInstance,\n    setMastodonInstance: setMastodonInstanceWrapper,\n    message,\n    setMessage: setMessageWrapper,\n    copiedSnackBarOpen,\n    setCopiedSnackBarOpen,\n    openUrl,\n    copyToClipboard\n  }\n\n  return (\n    <Context.Provider value={value}>\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport const MainContextConsumer = Context.Consumer;\nexport const MainContext = Context;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  disabled: {\n    pointerEvents: 'none',\n    color: theme.palette.action.disabled\n  }\n}));\n\nfunction LinkElement({href, onClick, disabled, children}) {\n  const classess = useStyles();\n\n  const className = disabled ? classess.disabled : '';\n\n  return (\n    <Link\n      href={href}\n      onClick={onClick}\n      target=\"_blank\"\n      className={className}\n      underline=\"none\"\n      rel=\"noopener noreferrer\" >\n      {children}\n    </Link>\n  )\n}\n\nexport default LinkElement;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport { MainContext } from '~/context/MainContext';\nimport Link from './LinkElement';\n\nfunction TwitterRowButtons() {\n\n  const {\n    message,\n  } = React.useContext(MainContext);\n\n  const disabled = message.length === 0;\n\n  const text = encodeURIComponent(message);\n  const postUrl = `https://twitter.com/intent/tweet?text=${text}`\n\n  return (\n    <SNSTableRow title=\"Twitter\"\n      openButton={\n      (<Link href=\"https://twitter.com/\">\n        OPEN\n      </Link>)}\n\n      postButton={\n        (<Link href={postUrl} disabled={disabled}>\n          POST\n        </Link>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default TwitterRowButtons;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport { MainContext } from '~/context/MainContext';\nimport Link from './LinkElement';\n\nfunction ParlerRowButtons() {\n\n  const {\n    message\n  } = React.useContext(MainContext);\n\n  const text = encodeURIComponent(message);\n  const postUrl = `https://parler.com/new-post?message=${text}`\n  const disabled = message.length === 0;\n\n  return (\n    <SNSTableRow title=\"Parler\"\n      openButton={\n      (<Link href=\"https://parler.com/\">\n        OPEN\n      </Link>)}\n\n      postButton={\n        (<Link href={postUrl} disabled={disabled}>\n          POST\n        </Link>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default ParlerRowButtons;\n","import React from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport { MainContext } from '~/context/MainContext';\nimport Link from './LinkElement';\n\nfunction PlurkRowButtons() {\n\n  const {\n    message,\n  } = React.useContext(MainContext);\n\n  const disabled = message.length === 0;\n\n  const text = encodeURIComponent(message);\n  const postUrl = `http://plurk.com/?qualifier=shares&status=${text}`\n\n  return (\n    <SNSTableRow title=\"Plurk\"\n      openButton={\n      (<Link href=\"https://plurk.com\">\n        OPEN\n      </Link>)}\n\n      postButton={\n        (<Link href={postUrl} disabled={disabled}>\n          POST\n        </Link>)\n      }\n\n    >\n    </SNSTableRow>\n  )\n}\n\nexport default PlurkRowButtons;\n","import React, {useState, useContext} from 'react';\nimport SNSTableRow from './SNSTableRow.js';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { MainContext } from '~/context/MainContext';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Link from './LinkElement';\n\nconst mastodonEncodedLengthLimit= 700;\n\nconst useStyles = makeStyles(() => ({\n  configBar: {\n    borderBottom: '0px'\n  }\n}));\n\nfunction MastodonRowButtons() {\n  const classess = useStyles();\n\n  const [configBarOpen, setConfigBarOpen] = useState(false);\n\n  const {\n    mastodonInstance,\n    setMastodonInstance,\n    message\n  } = useContext(MainContext);\n  const encodedMessage = encodeURIComponent(message);\n\n  const postDisabled = message.length === 0 || encodedMessage.length > mastodonEncodedLengthLimit || mastodonInstance === '';\n  const openDisabled = mastodonInstance === '';\n\n  const text = encodeURIComponent(message);\n  const postUrl = `${mastodonInstance}/share?text=${text}`\n\n  const handleChange = (event) => {\n    setMastodonInstance(event.target.value);\n  };\n\n  const randomPick = () => {\n\n    const pick = () => {\n      const examples = [\n        \"https://g0v.socal\",\n        \"https://mastodon.social\",\n        \"https://pawoo.net/\"\n      ]\n      const index = Math.floor(Math.random() * Math.floor(examples.length));\n      return examples[index];\n    }\n\n    let picked = pick();\n    while (picked === mastodonInstance) {\n      picked = pick();\n    }\n\n    setMastodonInstance(picked);\n  }\n\n  return (\n    <React.Fragment>\n      <SNSTableRow title={\n          <React.Fragment>\n            Mastodon\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() =>setConfigBarOpen(!configBarOpen)}>\n            {configBarOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </React.Fragment>\n        }\n        openButton={(\n          <Link href={mastodonInstance} disabled={openDisabled}>\n            OPEN\n          </Link>\n        )}\n\n        postButton={(\n          <Link href={postUrl} disabled={postDisabled}>\n            POST\n          </Link>\n          )}\n      >\n      </SNSTableRow>\n      <TableRow>\n        <TableCell className={classess.configBar} style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={3}>\n          <Collapse in={configBarOpen} timeout=\"auto\" unmountOnExit>\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box clone flexGrow={1}>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  value={mastodonInstance}\n                  fullWidth\n                  label=\"Address\"\n                  onChange={handleChange}\n                >\n                </TextField>\n              </Box>\n              <Button style={{marginLeft: '16px'}} onClick={randomPick}>\n              Random</Button>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  )\n}\n\nexport default MastodonRowButtons;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TwitterRowButtons from './TwitterRowButtons';\nimport ParlerRowButtons from './ParlerRowButtons';\nimport PlurkRowButtons from './PlurkRowButtons';\nimport MastodonRowButtons from './MastodonRowButtons';\nimport SNSTableRow from './SNSTableRow.js';\nimport { MainContext } from '~/context/MainContext';\nimport Link from './LinkElement';\n\nconst Container = ({children}) => {\n  return (\n    <div style={{width: '100%', maxWidth: '640px'}}>\n      {children}\n    </div>\n  )\n}\n\nconst OpenOnlyButtons = ({title, url}) => {\n  return (\n    <SNSTableRow title={title}\n      openButton={\n      (<Link href={url}>\n        OPEN\n      </Link>)}\n\n    >\n    </SNSTableRow>\n  )\n}\n\nconst GabButtons = () => {\n  return (\n    <OpenOnlyButtons title=\"gab\" url=\"https://gab.com\"></OpenOnlyButtons>\n  )\n}\n\nconst MeWeButtons = () => {\n  return (\n    <OpenOnlyButtons title=\"MeWe\" url=\"https://mewe.com/myworld\"></OpenOnlyButtons>\n  )\n}\n\nconst FacebookButtons = () => {\n  return (\n    <OpenOnlyButtons title=\"Facebook\" url=\"https://facebook.com\"></OpenOnlyButtons>\n  )\n}\n\nfunction SNSTable() {\n  const {\n    message\n  } = React.useContext(MainContext);\n\n  return (\n    <TableContainer component={Container}>\n      <Table>\n        <TableBody>\n          <MastodonRowButtons/>\n          <MeWeButtons/>\n          <ParlerRowButtons message={message}/>\n          <PlurkRowButtons message={message}/>\n          <GabButtons/>\n          <TwitterRowButtons message={message}/>\n          <FacebookButtons/>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default SNSTable;\n","import React, { useContext } from 'react';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WordCounter from '~/components/WordCounter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport SNSTable from '~/components/SNSTable';\nimport { MainContext } from '~/context/MainContext';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '20px',\n    margin: '0px',\n    maxWidth: '640px',\n  },\n  full: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n  },\n  page: {\n    width: '100vw',\n    height: '100vh'\n  },\n  appBar: {\n    position: 'relative',\n    margin: 0,\n    padding: 0,\n  },\n  textField: {\n    marginBottom: theme.spacing(1)\n  },\n  link: {\n    textDecoration: \"none\",\n    '&, &:visited, &:active' : {\n      color: 'inherit'\n    }\n  }\n}));\n\nconst Content = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.content}>\n      <Box flexGrow={1} clone>\n          <Paper className={classes.paper}>\n            {children}\n          </Paper>\n        </Box>\n    </Box>\n  )\n}\n\nfunction Base() {\n  const classes = useStyles();\n\n  const {\n    message,\n    setMessage,\n    copyToClipboard,\n    copiedSnackBarOpen,\n    setCopiedSnackBarOpen,\n  } = useContext(MainContext);\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const closeSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setCopiedSnackBarOpen(false);\n  }\n\n  return (\n    <Content>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.full}>\n\n        <Box display='flex'  alignItems=\"center\" >\n          <Typography gutterBottom display=\"inline\" variant=\"h5\">\n            PostToX\n          </Typography>\n        </Box>\n\n        <Typography gutterBottom variant=\"subtitle1\">\n          Write something and post to X SNS platforms.\n          &nbsp;\n          <a href=\"https://github.com/benlau/posttox\" className={classes.link}>Learn more.</a>\n        </Typography>\n        <Box clone>\n          <TextField\n            label=\"Message\"\n            multiline\n            variant=\"filled\"\n            rows={10}\n            onChange={handleChange}\n            defaultValue={message}\n            className={classes.textField}\n          />\n        </Box>\n        <Box display=\"flex\" alignItems=\"flex-start\">\n          <Tooltip title=\"Copy to Clipboard\">\n            <IconButton aria-label=\"Copy\" onClick={copyToClipboard} disabled={message.length === 0}>\n              <FileCopyIcon/>\n            </IconButton>\n          </Tooltip>\n\n          <Box flexGrow={1}></Box>\n          <WordCounter message={message}></WordCounter>\n        </Box>\n        <SNSTable>\n        </SNSTable>\n      </Box>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center'}}\n        message=\"Copied to Clipboard\"\n        open={copiedSnackBarOpen}\n        autoHideDuration={800}\n        onClose={closeSnackBar}\n        >\n      </Snackbar>\n    </Content>\n  );\n}\n\nexport default Base;\n","import React from 'react';\nimport Base from '~/components/Base';\nimport { MainContextProvider } from '~/context/MainContext';\n\nfunction App() {\n  return (\n    <MainContextProvider>\n      <Base></Base>\n    </MainContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}